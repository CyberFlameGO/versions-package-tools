name: $(date:yyyyMMdd)$(rev:.r)
trigger: none
pr: none
schedules:
- cron: "0 3 * * *"
  displayName: First daily build
  branches:
    include:
    - main
  always: true
- cron: "0 15 * * *"
  displayName: Second daily build
  branches:
    include:
    - main
  always: true

variables:
  PoolName: 'Azure Pipelines'
  VmImage: 'ubuntu-18.04'

stages:
- stage: Find_New_Versions
  dependsOn: []
  jobs:
  - job: Find_New_Versions
    pool:
      name: $(PoolName)
      vmImage: $(VmImage)
    steps:
    - template: /azure-pipelines/templates/get-tool-versions-steps.yml

- stage: Check_New_Versions
  dependsOn: Find_New_Versions
  jobs:
  - job: Check_New_Versions
    pool:
      name: $(PoolName)
      vmImage: $(VmImage)
    variables:
      ToolVersions: $[ stageDependencies.Find_New_Versions.Find_New_Versions.outputs['Get_versions.TOOL_VERSIONS'] ]
    steps:
    - pwsh: |
        $NewVersions = "$(ToolVersions)"
        if ($NewVersions) {
            Write-Host "The following versions were found: $NewVersions"
        } else {
            throw "No new versions were found"
        }
      displayName: Check versions

- stage: Trigger_Builds
  dependsOn: Check_New_Versions
    condition: and(succeeded(), eq(variables['WORKFLOW_FILE_NAME'], ''))
  jobs:
  - deployment: Run_Builds
    pool:
      name: $(PoolName)
      vmImage: $(VmImage)
    variables:
      ToolVersions: $[ stageDependencies.Find_New_Versions.Find_New_Versions.outputs['Get_versions.TOOL_VERSIONS'] ]
    timeoutInMinutes: 180
    environment: 'Get Available Tools Versions - Publishing Approval'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: /azure-pipelines/templates/run-ci-builds-steps.yml
